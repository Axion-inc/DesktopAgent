name: Nightly 50-run Dry-Run

on:
  schedule:
    - cron: '0 18 * * *' # daily 03:00 JST
  workflow_dispatch:

jobs:
  nightly:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run 50 dry-runs
        id: runs
        run: |
          python scripts/seed_runs.py plans/templates/weekly_report.yaml --dry-run --n 50 --var inbox=./sample_data --var workdir=./data/work --var out_pdf=./data/weekly.pdf || true
          python scripts/compute_nightly_metrics.py
      - name: Comment to tracking issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const m = JSON.parse(fs.readFileSync('nightly_metrics.json','utf8'));
            const top = (m.top_errors_24h || []).map(e => `${e.cluster}(${e.count})`).join(', ');
            const body = `Nightly (dry-run)\n- success_rate_24h: ${(m.success_rate_24h*100).toFixed(2)}%\n- median_24h: ${m.median_duration_ms_24h} ms\n- p95_24h: ${m.p95_duration_ms_24h} ms\n- top_errors: ${top}`;
            // Find or create a tracking issue by title
            const { data: issues } = await github.rest.issues.listForRepo({owner: context.repo.owner, repo: context.repo.repo, labels: 'type:tracker', state: 'open'});
            let issue = issues[0];
            if (!issue) {
              const created = await github.rest.issues.create({owner: context.repo.owner, repo: context.repo.repo, title: 'Nightly status (dry-run)', body: 'Auto-generated tracker', labels: ['type:tracker']});
              issue = created.data;
            }
            await github.rest.issues.createComment({owner: context.repo.owner, repo: context.repo.repo, issue_number: issue.number, body});
